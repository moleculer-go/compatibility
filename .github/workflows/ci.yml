name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  # NATS tests
  nats-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Start NATS Streaming with unlimited channels
      run: |
        docker run -d -p 4222:4222 nats-streaming -mc 0
        echo "NATS Streaming started with unlimited channels"

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Install Ginkgo
      run: |
        go install github.com/onsi/ginkgo/ginkgo@v1.16.4


    - name: Install Node.js dependencies
      run: |
        cd moleculerjs
        npm ci

    - name: Wait for NATS
      run: |
        for i in {1..30}; do
          if timeout 5s bash -c 'exec 3<>/dev/tcp/localhost/4222 && echo -e "INFO\r\n" >&3 && head -1 <&3' >/dev/null 2>&1; then
            echo "NATS is ready!"
            break
          fi
          echo "Waiting for NATS to be ready... ($i/30)"
          sleep 2
        done

    - name: Set environment variables
      run: |
        echo "STAN_HOST=localhost" >> $GITHUB_ENV
        echo "NATS_HOST=localhost" >> $GITHUB_ENV

    - name: Run NATS tests
      run: |
        ginkgo ./moleculerjs --focus="should discover and call a moleculer JS service over NATS" --randomizeAllSpecs --failFast --cover --trace

  # TCP tests
  tcp-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Install Ginkgo
      run: |
        go install github.com/onsi/ginkgo/ginkgo@v1.16.4


    - name: Install Node.js dependencies
      run: |
        cd moleculerjs
        npm ci

    - name: Run TCP tests
      run: |
        ginkgo ./moleculerjs --focus="should discover and call a moleculer JS service over TCP" --randomizeAllSpecs --failFast --cover --trace

  # Redis tests
  redis-tests:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Node modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Install Ginkgo
      run: |
        go install github.com/onsi/ginkgo/ginkgo@v1.16.4


    - name: Install Node.js dependencies
      run: |
        cd moleculerjs
        npm ci

    - name: Set environment variables
      run: |
        echo "REDIS_HOST=redis" >> $GITHUB_ENV
        echo "REDIS_PORT=6379" >> $GITHUB_ENV

    - name: Run Redis tests
      run: |
        ginkgo ./redis --randomizeAllSpecs --failFast --cover --trace
